apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: "elasticsearch"
  namespace: {{ k8s_namespace }}
  labels:
    app: "elasticsearch"
spec:
  serviceName: elasticsearch-cluster
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: elasticsearch
  replicas: {{ elasticsearch_replicas }}
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app: "elasticsearch"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
            topologyKey: kubernetes.io/hostname
      initContainers:
      - name: init-elasticsearch
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      containers:
        - env:
            - name: NODE_DATA
              value: "true"
            - name: NODE_MASTER
              value: "true"
            - name: "SERVICE"
              value: "elasticsearch-cluster"
            - name: "KUBERNETES_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            - name: "MINIMUM_MASTER_NODES"
              value: "{{ elasticsearch_minimum_master_nodes }}"
            - name: "ES_JAVA_OPTS"
              value: "-Xms{{ elasticsearch_java_memory }} -Xmx{{ elasticsearch_java_memory }}"
{% if elasticsearch_add_backup_secrets|bool %}
          envFrom:
          - secretRef:
              name: elasticsearch-secret
{% endif %}
          image: "{{ elasticsearch_image }}:{{ elasticsearch_image_version }}"
          name: "elasticsearch"
          resources:
            limits:
              cpu: "{{ elasticsearch_cpu_limit }}"
              memory: "{{ elasticsearch_limit_memory }}"
            requests:
             cpu: "{{ elasticsearch_cpu_request }}"
             memory: "{{ elasticsearch_request_memory }}"
          readinessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 15
            periodSeconds: 20
          livenessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 200
            periodSeconds: 20
          ports:
            - containerPort: 9200
              name: "http"
            - containerPort: 9300
              name: "transport"
          volumeMounts:
          - name: "elasticsearch-data"
            mountPath: "/usr/share/elasticsearch/data"
            readOnly: false
          - name: elasticsearch-config
            mountPath: "/usr/share/elasticsearch/config/elasticsearch.yml"
            subPath: elasticsearch.yml
          - name: elasticsearch-config
            mountPath: "/usr/share/elasticsearch/config/log4j2.properties"
            subPath: log4j2.properties
      volumes:
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ elasticsearch_storage_class }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ elasticsearch_storage }}"
